{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../throw-result/throw-result.component\";\nfunction RoundThrowsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ch-throw-result\", 2);\n    i0.ɵɵlistener(\"throwResultChanged\", function RoundThrowsComponent_div_1_Template_ch_throw_result_throwResultChanged_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.throwResultChanged.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const throw_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"teamNumber\", ctx_r0.teamNumber)(\"throw\", throw_r1)(\"disabled\", ctx_r0.disabled);\n  }\n}\nexport let RoundThrowsComponent = /*#__PURE__*/(() => {\n  class RoundThrowsComponent {\n    constructor() {\n      this.disabled = false;\n      this.throwResultChanged = new EventEmitter();\n    }\n    ngOnInit() {}\n  }\n  RoundThrowsComponent.ɵfac = function RoundThrowsComponent_Factory(t) {\n    return new (t || RoundThrowsComponent)();\n  };\n  RoundThrowsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RoundThrowsComponent,\n    selectors: [[\"ch-round-throws\"]],\n    inputs: {\n      disabled: \"disabled\",\n      teamNumber: \"teamNumber\",\n      throws: \"throws\"\n    },\n    outputs: {\n      throwResultChanged: \"throwResultChanged\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"container\"], [4, \"ngFor\", \"ngForOf\"], [3, \"teamNumber\", \"throw\", \"disabled\", \"throwResultChanged\"]],\n    template: function RoundThrowsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, RoundThrowsComponent_div_1_Template, 2, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.throws);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.ThrowResultComponent],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-evenly;margin-bottom:.8em}.container[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:not(:last-child){margin-right:.8em}\"]\n  });\n  return RoundThrowsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}