{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { GameConstants } from 'src/app/constants/game.constants';\nimport { ThrowResult } from 'src/app/models/throw-result';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button-toggle\";\nexport let ThrowResultComponent = /*#__PURE__*/(() => {\n  class ThrowResultComponent {\n    constructor() {\n      this.disabled = false;\n      this.throwResultChanged = new EventEmitter();\n      this.throwResult = ThrowResult;\n    }\n    ngOnInit() {}\n    onThrowResult(event) {\n      this.throw.result = event.value;\n      this.throw.points = GameConstants.POINTS[event.value];\n      this.throwResultChanged.emit(this.throw);\n    }\n  }\n  ThrowResultComponent.ɵfac = function ThrowResultComponent_Factory(t) {\n    return new (t || ThrowResultComponent)();\n  };\n  ThrowResultComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ThrowResultComponent,\n    selectors: [[\"ch-throw-result\"]],\n    inputs: {\n      disabled: \"disabled\",\n      teamNumber: \"teamNumber\",\n      throw: \"throw\"\n    },\n    outputs: {\n      throwResultChanged: \"throwResultChanged\"\n    },\n    decls: 8,\n    vars: 13,\n    consts: [[1, \"container\"], [\"name\", \"throwResult\", \"vertical\", \"true\"], [1, \"board\", \"cornhole\", 3, \"value\", \"disabled\", \"checked\", \"change\"], [1, \"fas\", \"fa-circle\"], [1, \"board\", \"on-board\", 3, \"value\", \"disabled\", \"checked\", \"change\"], [1, \"fas\", \"fa-square\"], [1, \"off-board\", 3, \"value\", \"disabled\", \"checked\", \"change\"], [1, \"fas\", \"fa-times\"]],\n    template: function ThrowResultComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-button-toggle-group\", 1)(2, \"mat-button-toggle\", 2);\n        i0.ɵɵlistener(\"change\", function ThrowResultComponent_Template_mat_button_toggle_change_2_listener($event) {\n          return ctx.onThrowResult($event);\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-button-toggle\", 4);\n        i0.ɵɵlistener(\"change\", function ThrowResultComponent_Template_mat_button_toggle_change_4_listener($event) {\n          return ctx.onThrowResult($event);\n        });\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-button-toggle\", 6);\n        i0.ɵɵlistener(\"change\", function ThrowResultComponent_Template_mat_button_toggle_change_6_listener($event) {\n          return ctx.onThrowResult($event);\n        });\n        i0.ɵɵelement(7, \"i\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"team1\", ctx.teamNumber === 1)(\"team2\", ctx.teamNumber === 2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.throwResult.Cornhole)(\"disabled\", ctx.disabled)(\"checked\", (ctx.throw == null ? null : ctx.throw.result) === ctx.throwResult.Cornhole);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.throwResult.OnBoard)(\"disabled\", ctx.disabled)(\"checked\", (ctx.throw == null ? null : ctx.throw.result) === ctx.throwResult.OnBoard);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.throwResult.OffBoard)(\"disabled\", ctx.disabled)(\"checked\", (ctx.throw == null ? null : ctx.throw.result) === ctx.throwResult.OffBoard);\n      }\n    },\n    dependencies: [i1.MatButtonToggleGroup, i1.MatButtonToggle],\n    styles: [\"[_ngcontent-%COMP%]:root{--team1-background-color: blue;--team2-background-color: red;--team1-color: white;--team2-color: white}.team1-background-color[_ngcontent-%COMP%]{background-color:var(--team1-background-color)}.team2-background-color[_ngcontent-%COMP%]{background-color:var(--team2-background-color)}.team1-color[_ngcontent-%COMP%]{color:var(--team1-color)}.team2-color[_ngcontent-%COMP%]{color:var(--team2-color)}.team1[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:var(--team1-background-color)}.team2[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:var(--team2-background-color)}.container[_ngcontent-%COMP%]{box-shadow:0 0 2px #c8c8c833,2px 2px 4px 2px #0003}.mat-button-toggle.board[_ngcontent-%COMP%]{background-color:tan}.mat-button-toggle.on-board[_ngcontent-%COMP%]:not(.mat-button-toggle-checked)   i[_ngcontent-%COMP%]{visibility:hidden}.mat-button-toggle.cornhole[_ngcontent-%COMP%]:not(.mat-button-toggle-checked){color:#000}.mat-button-toggle.off-board[_ngcontent-%COMP%]{background-color:green}.mat-button-toggle.off-board.mat-button-toggle-checked[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:red}.mat-button-toggle.off-board[_ngcontent-%COMP%]:not(.mat-button-toggle-checked)   i[_ngcontent-%COMP%]{visibility:hidden}i[_ngcontent-%COMP%]{font-size:1.5em}\"]\n  });\n  return ThrowResultComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}